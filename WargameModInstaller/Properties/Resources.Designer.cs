//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WargameModInstaller.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WargameModInstaller.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Installer was unable to alter the dictionary file..
        /// </summary>
        internal static string AlterDictionartErrorMsg {
            get {
                return ResourceManager.GetString("AlterDictionartErrorMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Altering dictionary.
        /// </summary>
        internal static string AlteringDictionary {
            get {
                return ResourceManager.GetString("AlteringDictionary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wargame Mod Installer.
        /// </summary>
        internal static string AppName {
            get {
                return ResourceManager.GetString("AppName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap BackImage {
            get {
                object obj = ResourceManager.GetObject("BackImage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backuping.
        /// </summary>
        internal static string Backuping {
            get {
                return ResourceManager.GetString("Backuping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel Installation.
        /// </summary>
        internal static string CancelInstallationHeader {
            get {
                return ResourceManager.GetString("CancelInstallationHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you really want to cancel the installation?.
        /// </summary>
        internal static string CancelInstallationQuestion {
            get {
                return ResourceManager.GetString("CancelInstallationQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the components you want to install. Click Install to start the installation..
        /// </summary>
        internal static string ComponentScreenDetail {
            get {
                return ResourceManager.GetString("ComponentScreenDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Components.
        /// </summary>
        internal static string ComponentScreenHeader {
            get {
                return ResourceManager.GetString("ComponentScreenHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config File Error.
        /// </summary>
        internal static string ConfigFileErrorHeader {
            get {
                return ResourceManager.GetString("ConfigFileErrorHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installer failed to found a configuration file..
        /// </summary>
        internal static string ConfigFileNotFoundErrorMsg {
            get {
                return ResourceManager.GetString("ConfigFileNotFoundErrorMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer was unable to find the following content file &quot;{0}&quot;.
        /// </summary>
        internal static string ContentFileNotFoundParametrizedMsg {
            get {
                return ResourceManager.GetString("ContentFileNotFoundParametrizedMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer was unable to copy the file &quot;{0}&quot;.
        /// </summary>
        internal static string CopyFileErrorParametrizedMsg {
            get {
                return ResourceManager.GetString("CopyFileErrorParametrizedMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copying.
        /// </summary>
        internal static string Copying {
            get {
                return ResourceManager.GetString("Copying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod.
        /// </summary>
        internal static string DefaultModname {
            get {
                return ResourceManager.GetString("DefaultModname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation was canceled by the user.
        ///
        ///To close the installer click Finish..
        /// </summary>
        internal static string EndScreenCanceledDetail {
            get {
                return ResourceManager.GetString("EndScreenCanceledDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation Canceled.
        /// </summary>
        internal static string EndScreenCanceledHeader {
            get {
                return ResourceManager.GetString("EndScreenCanceledHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The $ModName was successfully installed.
        ///
        ///To close the installer click Finish..
        /// </summary>
        internal static string EndScreenCompletedDetail {
            get {
                return ResourceManager.GetString("EndScreenCompletedDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation Completed.
        /// </summary>
        internal static string EndScreenCompletedHeader {
            get {
                return ResourceManager.GetString("EndScreenCompletedHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer encountered an error that caused installation to fail.
        ///
        ///To close the installer click Finish..
        /// </summary>
        internal static string EndScreenFailedDetail {
            get {
                return ResourceManager.GetString("EndScreenFailedDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation Failed.
        /// </summary>
        internal static string EndScreenFailedHeader {
            get {
                return ResourceManager.GetString("EndScreenFailedHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fatal Error.
        /// </summary>
        internal static string FatalErrorHeader {
            get {
                return ResourceManager.GetString("FatalErrorHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backuping game files for the installation time....
        /// </summary>
        internal static string InstallerBackupingFiles {
            get {
                return ResourceManager.GetString("InstallerBackupingFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clearing installation files....
        /// </summary>
        internal static string InstallerClearingFiles {
            get {
                return ResourceManager.GetString("InstallerClearingFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initializing installation....
        /// </summary>
        internal static string InstallerInitializing {
            get {
                return ResourceManager.GetString("InstallerInitializing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restoring orginal game files....
        /// </summary>
        internal static string InstallerRestoringFiles {
            get {
                return ResourceManager.GetString("InstallerRestoringFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing.
        /// </summary>
        internal static string Installing {
            get {
                return ResourceManager.GetString("Installing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified installation path is not correct..
        /// </summary>
        internal static string InvalidPathDetail {
            get {
                return ResourceManager.GetString("InvalidPathDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Path.
        /// </summary>
        internal static string InvalidPathHeader {
            get {
                return ResourceManager.GetString("InvalidPathHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Wargame AirLand Battile Location.
        /// </summary>
        internal static string InvalidWargameDirHeader {
            get {
                return ResourceManager.GetString("InvalidWargameDirHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It looks like the specified location is not a valid Wargame AirLand Battle installation directory. Do you still wish to continute?.
        /// </summary>
        internal static string InvalidWargameDirQuestion {
            get {
                return ResourceManager.GetString("InvalidWargameDirQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer was unable to load the edata content.
        /// </summary>
        internal static string LoadEdataErrorMsg {
            get {
                return ResourceManager.GetString("LoadEdataErrorMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setup will install the $ModName in your $WargameVersion folder.
        ///
        ///If the following location is not your $WargameVersion installation directory, please specify a correct one by clicking Browse.
        ///
        /// Click Next when you are ready to continue..
        /// </summary>
        internal static string LocationScreenDetail {
            get {
                return ResourceManager.GetString("LocationScreenDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose Install Location.
        /// </summary>
        internal static string LocationScreenHeader {
            get {
                return ResourceManager.GetString("LocationScreenHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no components selected for installation. There has to be at least one component selected to proceed..
        /// </summary>
        internal static string NoComponentsSelectedDetail {
            get {
                return ResourceManager.GetString("NoComponentsSelectedDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No components selected.
        /// </summary>
        internal static string NoComponentsSelectedHeader {
            get {
                return ResourceManager.GetString("NoComponentsSelectedHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installer was unable to perform an operation on the following file: &quot;{0}&quot; because the file doesn&apos;t exist..
        /// </summary>
        internal static string NotExistingFileOperationErrorParametrizedMsg {
            get {
                return ResourceManager.GetString("NotExistingFileOperationErrorParametrizedMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please wait while the installer restores the pre-inastallation state of the computer..
        /// </summary>
        internal static string ProgressScreenCancelingDetail {
            get {
                return ResourceManager.GetString("ProgressScreenCancelingDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Canceling Installation.
        /// </summary>
        internal static string ProgressScreenCancelingHeader {
            get {
                return ResourceManager.GetString("ProgressScreenCancelingHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please wait while the installer installs the $ModName on your computer. This may take some time..
        /// </summary>
        internal static string ProgressScreenInstallingDetail {
            get {
                return ResourceManager.GetString("ProgressScreenInstallingDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing.
        /// </summary>
        internal static string ProgressScreenInstallingHeader {
            get {
                return ResourceManager.GetString("ProgressScreenInstallingHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please wait while the installer restores the pre-inastallation state of the computer..
        /// </summary>
        internal static string ProgressScreenTerminatigDetail {
            get {
                return ResourceManager.GetString("ProgressScreenTerminatigDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Terminating Installation.
        /// </summary>
        internal static string ProgressScreenTerminatigHeader {
            get {
                return ResourceManager.GetString("ProgressScreenTerminatigHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rebuilding {0}....
        /// </summary>
        internal static string RebuildingParametrizedMsg {
            get {
                return ResourceManager.GetString("RebuildingParametrizedMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer was unable to remove the file &quot;{0}&quot;.
        /// </summary>
        internal static string RemoveFileErrorParametrizedMsg {
            get {
                return ResourceManager.GetString("RemoveFileErrorParametrizedMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing.
        /// </summary>
        internal static string Removing {
            get {
                return ResourceManager.GetString("Removing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer was unable to copy the file &quot;{0}&quot;.
        /// </summary>
        internal static string ReplaceImageErrorParametrizedMsg {
            get {
                return ResourceManager.GetString("ReplaceImageErrorParametrizedMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replacing.
        /// </summary>
        internal static string Replacing {
            get {
                return ResourceManager.GetString("Replacing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restoring.
        /// </summary>
        internal static string Restoring {
            get {
                return ResourceManager.GetString("Restoring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This installer will guide you through the steps required to install the $ModName on your computer.
        ///
        ///Click Next to continue..
        /// </summary>
        internal static string WelcomeScreenDetail {
            get {
                return ResourceManager.GetString("WelcomeScreenDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome to the $ModName Installer.
        /// </summary>
        internal static string WelcomeScreenHeader {
            get {
                return ResourceManager.GetString("WelcomeScreenHeader", resourceCulture);
            }
        }
    }
}
