<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="BackImage" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\BackImage.jpg;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="FatalErrorHeader" xml:space="preserve">
    <value>Fatal Error</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>Wargame Mod Installer</value>
  </data>
  <data name="Backuping" xml:space="preserve">
    <value>Backuping</value>
  </data>
  <data name="ProgressScreenCancelingHeader" xml:space="preserve">
    <value>Canceling Installation</value>
  </data>
  <data name="CancelInstallationHeader" xml:space="preserve">
    <value>Cancel Installation</value>
  </data>
  <data name="CancelInstallationQuestion" xml:space="preserve">
    <value>Do you really want to cancel the installation?</value>
  </data>
  <data name="Copying" xml:space="preserve">
    <value>Copying</value>
  </data>
  <data name="EndScreenCanceledDetail" xml:space="preserve">
    <value>Installation was canceled by the user.

To close the installer click Finish.</value>
  </data>
  <data name="EndScreenCanceledHeader" xml:space="preserve">
    <value>Installation Canceled</value>
  </data>
  <data name="EndScreenCompletedDetail" xml:space="preserve">
    <value>The $ModName was successfully installed.

To close the installer click Finish.</value>
  </data>
  <data name="EndScreenCompletedHeader" xml:space="preserve">
    <value>Installation Completed</value>
  </data>
  <data name="EndScreenFailedDetail" xml:space="preserve">
    <value>The installer encountered an error that caused installation to fail.

To close the installer click Finish.</value>
  </data>
  <data name="EndScreenFailedHeader" xml:space="preserve">
    <value>Installation Failed</value>
  </data>
  <data name="Installing" xml:space="preserve">
    <value>Installing</value>
  </data>
  <data name="InvalidPathDetail" xml:space="preserve">
    <value>The specified installation path is not correct.</value>
  </data>
  <data name="InvalidPathHeader" xml:space="preserve">
    <value>Invalid Path</value>
  </data>
  <data name="InvalidWargameDirHeader" xml:space="preserve">
    <value>Invalid Wargame AirLand Battile Location</value>
  </data>
  <data name="InvalidWargameDirQuestion" xml:space="preserve">
    <value>It looks like the specified location is not a valid Wargame AirLand Battle installation directory. Do you still wish to continute?</value>
  </data>
  <data name="LocationScreenDetail" xml:space="preserve">
    <value>Setup will install the $ModName in your Wargame AirLand Battle folder.

If the following location is not your Wargame AirLand Battle installation directory, please specify a correct one by clicking Browse.

Click Install to start the installation.</value>
  </data>
  <data name="LocationScreenHeader" xml:space="preserve">
    <value>Choose Install Location</value>
  </data>
  <data name="ProgressScreenInstallingDetail" xml:space="preserve">
    <value>Please wait while the installer installs the $ModName on your computer. This may take some time.</value>
  </data>
  <data name="ProgressScreenInstallingHeader" xml:space="preserve">
    <value>Installing</value>
  </data>
  <data name="Removing" xml:space="preserve">
    <value>Removing</value>
  </data>
  <data name="Replacing" xml:space="preserve">
    <value>Replacing</value>
  </data>
  <data name="Restoring" xml:space="preserve">
    <value>Restoring</value>
  </data>
  <data name="ProgressScreenTerminatigHeader" xml:space="preserve">
    <value>Terminating Installation</value>
  </data>
  <data name="WelcomeScreenDetail" xml:space="preserve">
    <value>This installer will guide you through the steps required to install the $ModName on your computer.

Click Next to continue.</value>
  </data>
  <data name="WelcomeScreenHeader" xml:space="preserve">
    <value>Welcome to the $ModName Installer</value>
  </data>
  <data name="InstallerBackupingFiles" xml:space="preserve">
    <value>Backuping game files...</value>
  </data>
  <data name="InstallerClearingFiles" xml:space="preserve">
    <value>Clearing installation files...</value>
  </data>
  <data name="InstallerRestoringFiles" xml:space="preserve">
    <value>Restoring orginal game files...</value>
  </data>
  <data name="ProgressScreenCancelingDetail" xml:space="preserve">
    <value>Please wait while the installer restores the pre-inastallation state of the computer.</value>
  </data>
  <data name="ProgressScreenTerminatigDetail" xml:space="preserve">
    <value>Please wait while the installer restores the pre-inastallation state of the computer.</value>
  </data>
  <data name="DefaultModname" xml:space="preserve">
    <value>Mod</value>
  </data>
  <data name="ConfigFileNotFoundErrorMsg" xml:space="preserve">
    <value>Installer failed to found a configuration file.</value>
  </data>
  <data name="CopyFileErrorParametrizedMsg" xml:space="preserve">
    <value>The installer was unable to copy the file "{0}"</value>
  </data>
  <data name="RemoveFileErrorParametrizedMsg" xml:space="preserve">
    <value>The installer was unable to remove the file "{0}"</value>
  </data>
  <data name="ReplaceImageErrorParametrizedMsg" xml:space="preserve">
    <value>The installer was unable to copy the file "{0}"</value>
  </data>
  <data name="ConfigFileErrorHeader" xml:space="preserve">
    <value>Config File Error</value>
  </data>
  <data name="InstallerInitializing" xml:space="preserve">
    <value>Initializing installation...</value>
  </data>
  <data name="NotExistingFileOperationErrorParametrizedMsg" xml:space="preserve">
    <value>Installer was unable to perform an operation on the following file: "{0}" because the file doesn't exist.</value>
  </data>
  <data name="LoadEdataErrorMsg" xml:space="preserve">
    <value>The installer was unable to load the edata content</value>
  </data>
</root>